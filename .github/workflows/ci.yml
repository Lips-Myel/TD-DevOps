name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEPLOY: "https://${{ vars.PWD }}-3000.direct.labs.play-with-docker.com"
      DOCKER_HOST: "tcp://${{ vars.PWD }}.direct.labs.play-with-docker.com:2375"
      DOCKER_DRIVER: overlay2
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.9'

      - name: Install dependencies
        run: npm install

      - name: Run build
        run: npm run build

  lint:
    runs-on: ubuntu-latest
    needs: build
    env:
      DEPLOY: "https://${{ vars.PWD }}.direct.labs.play-with-docker.com"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.9'

      - name: Run ESLint
        run: |
          npm run lint

  test:
    runs-on: ubuntu-latest
    needs: build
    env:
      DEPLOY: "https://${{ vars.PWD }}-3000.direct.labs.play-with-docker.com"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.9'

      - name: Run tests
        run: |
          npx jest

  docker_build:
    runs-on: ubuntu-latest
    needs: build
    env:
      DEPLOY: "https://${{ vars.PWD }}.direct.labs.play-with-docker.com"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/app:latest

  staging:
    runs-on: ubuntu-latest
    needs: docker_build
    env:
      DEPLOY: "https://${{ vars.PWD }}.direct.labs.play-with-docker.com"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Deploy to staging
        run: |
          docker-compose -f compose.staging.yml up -d
          echo "App deployed at => $DEPLOY"
          curl --fail "$DEPLOY" || exit 1

  deploy:
    runs-on: ubuntu-latest
    needs: staging
    env:
      DEPLOY: "https://${{ vars.PWD }}.direct.labs.play-with-docker.com"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Deploy to production
        run: |
          docker-compose -f compose.prod.yml up -d
          echo "App deployed at => $DEPLOY"
          curl --fail "$DEPLOY" || exit 1